<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABWFAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAFB1J
        REFUeNrtXQuczlX6/87FXM0YI0PIzDBjFoMhqxC6kEtuI1EiZUVKbpl1i90tq5EYKv4ol1jWZbG2MJLK
        hCGhCzZtpdpKVsi2qCz2+/vNS69/8zvzvq95x7znPN/n0/R639/l/J7ne855zu855zmAQCAQCAQCgUAg
        EHiKUFRDBppcsdyAX6MWYkShgYRg3IyFOIhjOFEMchxf4XU8jAqi2MBAOLJwFBeKWc7hZaSKcgMBj+BM
        sZu/QDYgQdRb2pGOQ34y/wWcxyhRcGnHOL+Z35Ld0gaUboSxp/YnAU6iuSi5NCMW2/1KgHPoL0ouzYji
        gO2CX2WqKLk0Iwiz/EyA9YgUNZdmdMQpvxLgQ1QVJZdmRGOJXwlwAk1FyaUbNfGaX93APqLi0o7qmIGv
        cd5PFJgsCi79CEUDPISnMA05PshU/E1Bn7UIFwXrjub4zpEA+1FZFKQ7quEjRwJ8i8aiIP1fKOU6EuC/
        uFsUpD+mK9zAJ0U9+mOAwg1cRSdToDla4ntHAuyVoLD+SMLHjgQ4ykGmQHs3cLMjAX5Ed1GQ7gjC8wo3
        8HFRkP54REGAP4sbqD9uxX8cCfCOrBLQHzXxmSMBDiNdFKQ7YrBF4QZ2FgXp7wbOVXgBo0VB+mOIggCL
        ECIK0h3tFPMLdyBOFKQ7UvFPRwJ8idqiIN1RDlsdCfAD2ouC9HcDFyi8gBGiIP2RpXQD41FeRCHxHEoH
        BTYB7mBT70SA43QE80WU8iZexJ2IDVwC1MFXfl5qpr/8gNXUY4AiDm+LCYtBtgdqep1QLBbzFYvMC9TV
        FGPFeMUi3wbqmsou+FHMVywyMjAJUA/fiPGKRWYGJgEqYLcYz2QChGKpGK9YJEvHt4EinsoptAtUArTx
        c9IZM+RTJAcqARIVS0REPJVcRAUqASKwTgxodl6VPyoe7HvswS4Ryjs45qils+gRyAS4Ez8p0salIBox
        xktZVFbMoj6MeoFMAFVM8Ds0k2kTNlLwuSIYFBfIjxaLPEUn8JDY3kZHxdyJOYE+MWSmggAvBPrDFRPG
        K/ZZGBjoD9dPkS8kH+XF+iiD1Tp3k00UHu43ge3gFBOq4oCjhj4I/MR6FbFXMcSRrGFWSp2TjhpazvYh
        wKGeGSTJY4HBCv1osdPSCMUDbjR+D4FgzHfUzmm01eERVekiDqGm4QSIV0yeDeAwkDuq46CC46YvE8vA
        vxRhIC3ax3DlfmRjDCdAb7rCTrrJ1uUh/6AgwIrA93OvCNMUY6SeujxkV8Wrzn241mDzRytyKn6jTzal
        NHwpG0oWilR9w0DuiMEbirfdgwwmgNZhIHfMkJBQoRiv0MsAnR70PpxT5AwyNSQUpggDndBrtsT1OKpw
        duobSoAq+LvOYSB3qFYJmbuRjOZhIHeEYKGit5tiKAEGm5ROc4gyJBRloPlVibQ0CQO5o5ViI5lDqGEg
        AdRhIO00Uk3h8JxGBwMJkKFwjDUMk4dhjYSELkNvur/ah4HcMUFBgJUGhoSmOmrjJ33CQO7ohDMSEroE
        Q8JA7lAFPswLCdUyIwzkKefNCwkZEwbyrNezQkLBRhFggilhIE/9XrO2kQg3Jwx0+cj3XwrHx6RNZaua
        EwZyRzx2KkJC9xhEgFb4tylhIHcEYZ6EhGwYFQZyx8OKB3+V4wQzYMBqICe0UETAPzNmlVAF7DIpDOSO
        axVLoc8YExJqqFwNpHVoPAwrFZ3AWEMIYFwYyB3jJCSkWA2kaRjIHe2NDwmpXokf1j9nSk0cUmTEMSEk
        lIovTAsDuSOKwz3nTsCEkJAqLD7HhEUykw0PCWmdFM4T3K1IH6v/KiHV1LgTgbo9lHdQ7SV0RPuQkCoM
        9L6+YSB3xNHVcU6KoHtIqKUyDBRqAgGCMNfgkNCjuieF8wQDFUrYpPWr0GDlaqB2phCgGd0dM0NC8cow
        ULIpBKiMDwwNCRkcBnJHKJYpOoFxGj95b0WiDKPS5o4yNCSUo+veQN6iLV0eJ1Xs1zYkVNbsMJA7kvGJ
        IiR0k6ZPrQoD5Rs1LR6R2GBgSEgVBpptWq60SQoCvKipMowPA7njLuNCQqow0HdmhIHcURdfK0JCOiaO
        U+0NZEgYyB2x2KoYEvXS8IklDHQZgpQ7CuoYEpIw0P9Df8VbMf1CQiGK1UCnzAkDuaMJjisSx6Vo9rQS
        BvoFEvCuQSGhRoqkcLlm7p0WgqUGhYT6mLwayAmPKQjwF46bdUKOCXsDeYvWih0FD2gVEpIwUKGojn8o
        Ese10OhJDV8N5IQI5Y6CD2v0pJ1MTArnCZ40JCQ0QcJAhSNTERLaybGzHpAwkCNqK3YU1GeVkKFJ4TxB
        DPIMCAm1NDMpnGd41oCQkISBFHhA8YZMj5BQsFl7A3mLxjimWCX0K4SwiQxkCUUlc5PCeYJrFDsKnsUb
        WIXVAS2rsBGnJAzkjBAsUvSQuks2BEoXSW/5ydww0M9Ipot03lACaLo3kDdvyHrhfYM7AIPDQAXu31RF
        ONgEMToMlET/+ILhMsDknj/XePNrvDdQUaiEtcab/wI+NG6zTBciMUvMT1lv6kuggYrZMebIadxtpvnr
        K1JDmCSzzaz/Ycp9w0yR45jGQbCRuFWRIdB9D8ET+Cc+1U4OsfXbjfm4zby1wAUo40Hg5zAWoy8aI4VD
        Rf0kCRUN2yP5MmTQvCrj/4AlaGL6FCmdMVpp/pPIMidXpomIxiaF+c9ghMmNowmoo8gKZG0WEyEq0hvd
        8aMiIURdUZDuUG0ZOcPkwKgZCMYcxWvRDqIg/d8BrnYkwOcyOVp/RCrGALtRURSkO6LwugHrgAWOiFDM
        Adpv6tQIk1AGyx0JcBQZoiD9McORAOfwoKhHfwxTvAdYh2hRkO5oq1gkecqsLZPMRJIiKdwF7EEtUZG5
        bmBBN5AkStIbqmwglryJ5hIT0LsT+LCICWFfYzIaybQQfTHJo0XTr2IasjBUQxmC3miIcHMJUAefGj4l
        /L84gqVobC4FxhmbDsJdPjY3AF4JW4QAlIPmJom/RTk30Bz5P4SYSoFBir3DzZFPzJ0GE4YnFFnCTZFT
        uM1cVzAKTynmCJsyHuhs8huBSIzGd0YT4Hu0MvulUAh6KPLo6y8HUE3eDNbBQtYEU9PEStwD1lzBLshV
        zBTQVXaauV1s4YhFJyzCZ0XECvUyfxMx++UIRS30wSxs4fj4BFuEM/hBS/mefX+21H5nxCAJjdCaQ6RM
        n6RbqZZMtKTrJ32/QCAQCAQCgUDgGcIRiziOEkpXGrlgRLNU5WT3L3+iGgdQk7EaediBN7EcT6A9Eq56
        qcqiKR7DQmxCPrZhHWaiH2qbmgPUf0ihuff9InR8GrswAlWuWqmi0QPrcfwXi1y/wDw0k3R3xYUw9MV+
        x9ep51nzOl4VZddjK3Rasev5RMl4UhyIQXaRQaJjGEaalCzaKkh5Uday5RJcEaKQ41Fw6DSySnRyZVt8
        7lG4Z7O8778SBGGkx1PGTuKeEmz893sc8VvGsYHAR7TAN17NrUkrIb9/uRelOsvuSeBj8+/tnoI5JeIM
        9sQZr0r1keQ88A23sVn3jgBflECu4bIc+Hk78WOcGNMXTPdhjo3/m9umvxj3Fy35kgHRe8Rjpw8EWO33
        4eAIn7aHaioG9RbpXjmAF2Wfn5NNBuElH0p1Hg+IQb1FG5/2FD+C2n4tlXq/E2eZIAb1Fl19WjR23M9J
        F+KwzScCPCMG9Radfdpa9hga+bVU5bDVJwI8LQb1Fq28HgRa8pWf375HYJ1PBBglBvUWKRzVe6/oXajg
        53LN9KFUZyUDqi8vXF7zQdXz/f4usB/OeV2qrzmmEXiNsT7UtHv9XqraPrRMr0jOQ19QH196qei9JTA7
        KNTrnc/P4n4xpi8IxlSvFH0OQ0ukXM1xxKty5Zm6SfyVoybrtOeKzvW7A3iRmBO9yHJ4Ap3EkL7jDo9r
        28ESzLt5DdZ63PyPNzcNXPGgL456oOhP0a6E26bNHpk/R/ZAuVIEoTs+KnL0f3OJlysZy2hgdeM/noNZ
        QTGgAf6EfzvuNfbcVUq1WA7DHKl5FlvY90vjX2yIQFsswMeXTcb6D/bT+M2v6iqcWhiHfNb1n18O/YTD
        HPffL56/P0bgyXQKh2ESh4cTMRitUbVUZNmIx43oh9/hGTyN0eiJdFkhKBAIBAKBQCAQCAQCgUAgEAgE
        glKI8qiLGkXm3otCTCHfBqG66/swJDtcIwRJiEQsqiEBlTwsUwzLVJ9SD3G8biyvXL7Qd/+h/D74svJc
        x6MtlOF5YfYRSYgo8n7hvI+hGbzbYCkWYA1yiohh9cPYQr4tg5Voa3+qiY0OO+CUwytojEze5XFM9LBU
        HbAP8/EiZuNGPIp0NOTnwqZX1MZCUsCdEEvR1f50HctjLRSpiA1oUOT9bsVzZub3q4HXqLAIpGI5uuER
        ylDWmAcxFb1YK67BYEzDGCozBW/hAPpSSZ0wBcNZl0N4/DQMwnZ0tK+Uij3IwjO4DxUwyl6kdRe627/E
        8dwb0RN/ofnXkEbjUYVnd8LTmIxWNOsoDODn+9CbJOziqs/dkMuaHG5LFlpiFo7gdzTT4xiGW9AMT1Ga
        sdxTcRTZvMpwliyDv0WSbAULMRKxE7+CtVHtdtKnIo/I4ZWq8C5Wqa7nc8ajD89/gq1MPJbhS/zWg5ZC
        O/SgwsJcjW4cNmMdbqai5/P7tTR3JubSJH+lsmP46WUqtD3/3oOZVFxrKvh+EuQL1ybIKfiMx92JN3je
        8zRtWV75LhcB8mwCrCQB3qZpN+IxdhwLafLx2MLz9vJqA3n2KH6f71ri3RWfYAamoz+7ntd41f54nzTo
        g8M8sgPvMQgP82890vQAW6A78TqfIhObSKeXXQSozl8WkpCzeaUGuJdltnYmGs275vKobMqNWEQyzCL1
        y5Lkb6OpiZM4elJhBT13BhvaDVRPMGmwGS/wvymsOSMpm9n8gqqbyb+T8QF/W0PJZpNureHZ4tYCpPL/
        v8Uc3I5Xqe4Nrh7/ZwL8kQ0tSJPJrN0Dae5ZeI93fQvN2Wrs5KdE7HDN8Mnkp/YkWQbr9EZ+aoY3aeKe
        JEMwCbbK7u3X0Kzp2MZrtaPpy6Az7+hOgL14gK1Fd7zL52jI2p+FrSREFV6pC8l5EzusoSzDMl4zlIRb
        Z+YcnlTWnfZUQCrV0hd/Y10KZlP9JF2wB6nQOazLtWg0y9RjbRqMwWrWp66skQOp6ngetw93uK50kHUx
        nEdb5n2ZZv2D6x4/dwGTWKctAkzitfNwA42zh47eFpo3gXU/nW7bRQJ0u2SQCJKpA821lb7E3SxhEM33
        Os1YjS1Ae5ZlJyrTj9nK7moQTRnt1gXssH2ACqRIE9b1ySzhArYqYHezDStIrCxSqC5G2K1HN97F0Cmc
        HdkEvsBm/mmqcAWVa7mFq2ns5VTbENas6VT6RhqxOxvJ/nT1FlONK1n3KuMlHj8f+1nfC7yJd/n9n7De
        drlG4lua9aITmItfU8WLMIHtBvB7djLXs12ZS3mflHuFVKhI49Wm0TbTA7HQmXQJd/nna0isVJIomzX6
        zyRrOZZpJWUa259Emu85thNrWa6VfIpoljvT5QRutlukBJq2IduvjfQBNvC4KLTACTqWFsneIMGX4B0e
        15h0+b2JPgBsFTVCmt0R1KShLVTlN5Vt5dehJLDvD+PndP5uDRob0tjBtmEzaK5UVzLEcF6juuu8aCr8
        lUs1KoStSDTPS7brLfi3qt1EN+Sxqbx6Kn8N5dkRvEuay+xxvFeQa2CXwjsE8Z7pPLaG/W0EP9e1zRVE
        CjTgeZXYklzHc4L5X3nXsDTNPsLaiyzSPqM2j0ojAdpht51LJIRXrm8/XVm7jHVkImdxoS9rXftSWrYm
        bAdGSDZv/yKW3Ulpfa0SwXZAMvq7IZ0un2d7WF5Dt+4Gu3ke7mE+rmR6FtZoP6vQtMkdXN5DYS+n0sQw
        JYM4unR57LlrsGdOZB9Yg71iOduFqsq+sRrrcr1Lxk6hY2e5g1Wxy056kEAfoIrtFViOW7z9UrgGz6lz
        yZm6iWOEnjS0NY6ozKMS6exZfkVtu6e/zd48vQL78MouZ7E+iRLEa27CEyW02NN43EAv/i162W/TGx6I
        wfT4l9KTr8Ex/zrM49DwWX6/wXb+LAK8x2OHkwD5NGFT+tyLefztNPEiu9+fi5vpXk2nPz/a1QHcxCFe
        rP1aZxP6cVw+l573FPr3q9gqRLI9GcOavoAjjqUcJibyaks4fOxHwhwiKVuLcUoGz3NwVhP/oG+cgu1o
        SY98HodpL9FQ5WjKLNbEvEsj/W24i9914ag7g+YaxZFDPw6sHqFJgQdpvjYcCiahF81d0AY0oylfIJly
        Sa57SZ9EDtE2k0CJpNbtJMFE3uWvuIeDu8UsxXzeuwnuIzVW8mqCEsKzeJwE2EGz1ONfq7kfT5MtsEfK
        q9Cb/vJGjsoLCJBP8w7nyPs9juPX20GXZhxLD7cJMJAEuJ3mDWcNftW1PqY59vBfze0evRepAvSnca1V
        9mtp9mxM4jnrMI6fhmI2x+GW+1iXtFoheTVKDjNZ91LYq1dnjV/NOmnV0R5sAYbxNyseEGLX+QIC7GIf
        HUdCnGQ/PpZm70CiPINO7EAyabQV7Eq2sO53JEUKCNDCflFbgN5s3oPZcuSRBA/xuDS6h09iEK/SFk/h
        Abtt6Uo6TqOPvoTtUhUxTcngXtbvBNZ6y+lKY+Ofwz49jEZqw38/au9/NRIN7SMr8ShrK6Sm7OevpWEH
        YQZH1AlsuIfShMMxgK6h1S00YMdRxkWZMZdeBzXFEJIpiH6CNS5owW+mkG6R+A2vNpzXDmObMJ20uo6/
        tCYtbxHT6A0rXv+oqMFcpLDFqCRqEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAh8wP8AufbX8M2zHVoAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>